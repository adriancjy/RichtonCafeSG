{"version":3,"sources":["logo.svg","components/create-todo.component.js","components/edit-todo.component.js","components/todo-list.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreateTodo","props","state","todo_description","todo_responsible","todo_priority","todo_completed","onChangeTodoDescription","bind","onChangeTodoResponsible","onChangeTodoPriority","onSubmit","e","this","setState","target","value","preventDefault","console","log","newTodo","axios","post","then","res","data","style","marginTop","className","type","onChange","name","id","checked","Component","EditTodo","onChangeTodoCompleted","get","match","params","response","catch","error","obj","history","push","align","htmlFor","Todo","todo","to","_id","TodosList","todos","map","currentTodo","i","key","todoList","App","class","href","src","logo","width","height","alt","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6d87a491.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateTodo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        }\r\n\r\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChangeTodoDescription(e) {\r\n        this.setState({\r\n            todo_description: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoResponsible(e) {\r\n        this.setState({\r\n            todo_responsible: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoPriority(e) {\r\n        this.setState({\r\n            todo_priority: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(`Form submitted:`);\r\n        console.log(`Todo Description: ${this.state.todo_description}`);\r\n        console.log(`Todo Responsible: ${this.state.todo_responsible}`);\r\n        console.log(`Todo Priority: ${this.state.todo_priority}`);\r\n        \r\n        const newTodo = {\r\n            todo_description: this.state.todo_description,\r\n            todo_responsible: this.state.todo_responsible,\r\n            todo_priority: this.state.todo_priority,\r\n            todo_completed: this.state.todo_completed\r\n        };\r\n\r\n        axios.post('/api/add', newTodo)\r\n            .then(res => console.log(res.data));\r\n        \r\n        this.setState({\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Create New Todo</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\"> \r\n                        <label>Description: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.todo_description}\r\n                                onChange={this.onChangeTodoDescription}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Responsible: </label>\r\n                        <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.todo_responsible}\r\n                                onChange={this.onChangeTodoResponsible}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityLow\" \r\n                                    value=\"Low\"\r\n                                    checked={this.state.todo_priority==='Low'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Low</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityMedium\" \r\n                                    value=\"Medium\" \r\n                                    checked={this.state.todo_priority==='Medium'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Medium</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityHigh\" \r\n                                    value=\"High\" \r\n                                    checked={this.state.todo_priority==='High'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">High</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create Todo\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class EditTodo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n        this.onChangeTodoCompleted = this.onChangeTodoCompleted.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/api/'+this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    todo_description: response.data.todo_description,\r\n                    todo_responsible: response.data.todo_responsible,\r\n                    todo_priority: response.data.todo_priority,\r\n                    todo_completed: response.data.todo_completed\r\n                })   \r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onChangeTodoDescription(e) {\r\n        this.setState({\r\n            todo_description: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoResponsible(e) {\r\n        this.setState({\r\n            todo_responsible: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoPriority(e) {\r\n        this.setState({\r\n            todo_priority: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoCompleted(e) {\r\n        this.setState({\r\n            todo_completed: !this.state.todo_completed\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const obj = {\r\n            todo_description: this.state.todo_description,\r\n            todo_responsible: this.state.todo_responsible,\r\n            todo_priority: this.state.todo_priority,\r\n            todo_completed: this.state.todo_completed\r\n        };\r\n        console.log(obj);\r\n        axios.post('http://localhost:4000/todos/update/'+this.props.match.params.id, obj)\r\n            .then(res => console.log(res.data));\r\n        \r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 align=\"center\">Update Todo</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\"> \r\n                        <label>Description: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.todo_description}\r\n                                onChange={this.onChangeTodoDescription}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Responsible: </label>\r\n                        <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.todo_responsible}\r\n                                onChange={this.onChangeTodoResponsible}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityLow\" \r\n                                    value=\"Low\"\r\n                                    checked={this.state.todo_priority==='Low'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Low</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityMedium\" \r\n                                    value=\"Medium\" \r\n                                    checked={this.state.todo_priority==='Medium'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">Medium</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\" \r\n                                    type=\"radio\" \r\n                                    name=\"priorityOptions\" \r\n                                    id=\"priorityHigh\" \r\n                                    value=\"High\" \r\n                                    checked={this.state.todo_priority==='High'} \r\n                                    onChange={this.onChangeTodoPriority}\r\n                                    />\r\n                            <label className=\"form-check-label\">High</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <input  className=\"form-check-input\"\r\n                                id=\"completedCheckbox\"\r\n                                type=\"checkbox\"\r\n                                name=\"completedCheckbox\"\r\n                                onChange={this.onChangeTodoCompleted}\r\n                                checked={this.state.todo_completed}\r\n                                value={this.state.todo_completed}\r\n                                />\r\n                        <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\r\n                            Completed\r\n                        </label>                        \r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Update Todo\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Todo = props => (\r\n    <tr>\r\n        <td>{props.todo.todo_description}</td>\r\n        <td>{props.todo.todo_responsible}</td>\r\n        <td>{props.todo.todo_priority}</td>\r\n        <td>\r\n            <Link to={\"/edit/\"+props.todo._id}>Edit</Link>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class TodosList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {todos: []};\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/api/')\r\n            .then(response => {\r\n                this.setState({ todos: response.data });\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            })\r\n    }\r\n    \r\n    todoList() {\r\n        return this.state.todos.map(function(currentTodo, i){\r\n            return <Todo todo={currentTodo} key={i} />;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Todos List</h3>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }} >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Responsible</th>\r\n                            <th>Priority</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.todoList() }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport CreateTodo from \"./components/create-todo.component\";\r\nimport EditTodo from \"./components/edit-todo.component\";\r\nimport TodosList from \"./components/todo-list.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n    <div className=\"container\">\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a class=\"navbar-brand\" href=\"https://codingthesmartway.com\" target=\"_blank\">\r\n              <img src={logo} width=\"30\" height=\"30\" alt=\"CodingTheSmartWay.com\" />\r\n            </a>\r\n            <Link to=\"/\" className=\"navbar-brand\">MERN-Stack Todo App</Link>\r\n            <div className=\"collpase navbar-collapse\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">Todos</Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/create\" className=\"nav-link\">Create Todo</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n          <br/>\r\n          <Route path=\"/\" exact component={TodosList} />\r\n          <Route path=\"/edit/:id\" component={EditTodo} />\r\n          <Route path=\"/create\" component={CreateTodo} />\r\n        </div>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}